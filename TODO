- div resizing:
	- in tab's, the revision section:
		- resize motherfucker

- keys: 
	- create key: 
		- refocus from new to current
			- with new key active
		- clear form after creation: ajax
		- add/drop jquery for fields
	- show_non_key_records

- data set joins:
	- create Join
		- enter name
		- select left key
		- select right key
	- create JoinField
	  - name: defaults to left key.name
		- left key
		- right key
		- has_many :conditions # if none: assume equality
	- create JoinRecord
		- left record
		- right record

	- create Condition ( do this later, much harder, need data typing )
		- useable by JoinFields and Filters 
			- Filters act on a single data set
		
- revision analysis:
	- select revision
	- show key-analysis:
		- for each key on dataset or revision
			- how many record matchups (domain composition integrity)
	- modify data_table display
		- new records: green 
		- lost records: add to datatable, colored red
		- changed records:
			- new field: cell is green
			- deleted field: cell is red
			- changed value: cell is yellow



api:
  - gem
		- privacy:
			- public site + public database
			- public site pointing to private database
			- private site pointing to private database


	- for logging: 
	  - $table = Table.new( "stats" )
		- $table = Table.head( "stats" ) # revision( "stats", :created_at => )
	  - $table = Table.new( "stats", "id=5" ) # with parameters
		- $table = Table.new( "stats", "id=5", "pro-football-reference.com/stats/5/" )
		- $table.log( :notice => "Crawler starting load", :job_id => "18383" )
		- my_hash.keys.each_with_index do |key,i|
				$table.log( :i => i, :key => key, :value => my_hash[key] )
			end
	- for data usage:
		- pull data out, process it, then relog it