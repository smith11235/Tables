- keys: 
	- create key: 
		- clear form after creation
		- improve field selection: add/drop jquery for fields
- div (re)sizing

- Join:
	- ****************************************************
		- Progress: finish Create Join 
			- current_joins: how to show them... hmmm, need to collect them in controller
				- or make current joins a key_X_joins subsection for more proper organization
		- new form: dropboxs, joins_controller.create
		- has_many :join_fields
		- has_many :join_records

	- Create Join ( in data_sets/X Join tab )
		- form in datasets join tab
		- enter name
		- select left Key (dropdown, @key.data_set.keys)
		- select right Key ( dropdown, Key.all )
		- create and on success redirect to join

	- join_url/X
		- main_display 
			- columns: left.(names) + right.(names)
			- empty to begin with, loaded from JoinRecord's

		- rails generate scaffold JoinField left_field:references right_field:references
			- belongs_to (left|right)_field, :class_name => "Field"
		- Current fields index
			- with delete option
			- on delete, reindex
  	- Create JoinField form
			- just selct two fields
			- on create, reindex

	- index JoinRecord's
		- rails generate scaffold JoinRecord left_record:references right_record:references
		- belongs_to (left|right)_field, :class_name => "Field"

	- Display:
		- column names: (left|right).<field name>
		- add record.id columns for left and right
		- views:
			- All Join Records
			- left duplicates
			- right duplicates
			- missing records (left and right display)

- key:
	- allow creation on top of Join or DataSet
	- allow setting of Condition's
		
- revision analysis:
	- select revision
	- show key-analysis:
		- for each key on dataset or revision
			- how many record matchups (domain composition integrity)
	- modify data_table display
		- new records: green 
		- lost records: add to datatable, colored red
		- changed records:
			- new field: cell is green
			- deleted field: cell is red
			- changed value: cell is yellow

api:
  - gem
		- privacy:
			- public site + public database
			- public site pointing to private database
			- private site pointing to private database


	- for logging: 
	  - $table = Table.new( "stats" )
		- $table = Table.head( "stats" ) # revision( "stats", :created_at => )
	  - $table = Table.new( "stats", "id=5" ) # with parameters
		- $table = Table.new( "stats", "id=5", "pro-football-reference.com/stats/5/" )
		- $table.log( :notice => "Crawler starting load", :job_id => "18383" )
		- my_hash.keys.each_with_index do |key,i|
				$table.log( :i => i, :key => key, :value => my_hash[key] )
			end
	- for data usage:
		- pull data out, process it, then relog it