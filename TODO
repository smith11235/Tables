simple.yml
friends:
 :records:
   - { recorded_on: "2011-07-31" }
	 - { i: 0, name: mike, age: 25 }
	 - { i: 1, name: jon, age: 25, status: little }
	 - { i: 2, name: john, age: 25, status: awol }
	 - { i: 3, name: andrew, age: old }
	 - { i: 4, name: kate, age: 24, is_a: student }

friends:
 :records:
  - { recorded_on: 2011-07-31 }
	- { i: 1, name: jon, age: 25, status: little }
	- { i: 2, name: john, age: 26, status: awol }
	- { i: 3, name: andrew, age: so old, married_to: kate }
	- { i: 4, name: kate, age: 25, is_a: doctor }

the good, the bad, the ugly:
 :records:
  - { name: katie, who: mike, start: 2004-08-22, end: too late }
	- { name: kate, who: andrew, start: 2008-07-15 }
	- { name: jon, who: rachel, start: 2012-02-15 }


view:
	- by table.name
	- by table.name and table.signature # for a specific table rendering
	- by table.name and table.signature and table.created_at =  # for a specific revision
	- multi-table linking by fields

api:
	- for logging: 
	  - $table = Table.new( "stats" )
	  - $table = Table.new( "stats", "id=5" ) # with parameters
		- $table = Table.new( "stats", "id=5", "pro-football-reference.com/stats/5/" )
		- $table.log( :notice => "Crawler starting load", :job_id => "18383" )
		- my_hash.keys.each_with_index do |key,i|
				$table.log( :i => i, :key => key, :value => my_hash[key] )
			end

deployment:
	gem, expose hook to db:migrate? or expose a start up routine
	 allow gem to read config dirs for datatype fixtures and other controller logic/special searches 
